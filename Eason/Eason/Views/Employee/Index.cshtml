@model IEnumerable<Eason.Models.Employee>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header card-header-icon" data-background-color="purple">
            <i class="material-icons">assignment</i>
        </div>
        <div class="card-content">
            <h4 class="card-title">人員管理</h4>
            <div class="toolbar">
                <!--        Here you can write extra buttons/actions for the toolbar              -->
                @*<button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Employee")';">新增人員</button>*@
                <button class="btn btn-primary" onclick="showModal('Create')">新增人員</button>

            </div>
            <div class="material-datatables">
                <table id="datatables" class="table table-striped table-no-bordered table-hover" cellspacing="0" style="width:100%">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.EMP_NAME)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EMP_CNAME)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EMP_TITLE)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EMP_EMAIL)
                            </th>
                            <th class="disabled-sorting">
                                修改/刪除
                            </th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" style="display: none">
    <div class="modal-dialog animated">
        <div class="modal-content" id="myModalContent">
            <div class="modal-header">
                <button type="button" class="close" id="closbtn" style="font-size:24px">×</button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#datatables').DataTable({
                "ajax": {
                    "url": "/Employee/LoadData",
                    "type": "POST",
                    "dataType": "json"
                    //"data": function (d) {
                    //    d.frm_data = JSON.stringify($('#searchForm').serializeArray());
                    //}
                },
                "columns": [
                    { "data": "EMP_NAME", "autoWidth": true },
                    { "data": "EMP_CNAME", "autoWidth": true },
                    { "data": "EMP_TITLE", "autoWidth": true },
                    { "data": "EMP_EMAIL", "autoWidth": true },
                    {
                        "data": null, "autoWidth": true,
                        "render": function (data, type, col, meta) {
                            if (type === 'display') {
                                return $('<a>')
                                    .wrapInner("<i class='material-icons'>edit</i>")
                                    //.attr('href', '/Employee/Edit?serno=' + col.EMP_SERNO)
                                    .attr('onclick', String.format('showModal("{0}")', 'Edit?serno=' + col.EMP_SERNO))
                                    .addClass("btn btn-simple btn-warning btn-icon edit")
                                    .wrap('<div></div>')
                                    .parent()
                                    .html()

                                    + $('<a>')
                                        .wrapInner("<i class='material-icons'>close</i>")
                                        //.attr('href', '/Employee/Delete?serno=' + col.EMP_SERNO)
                                        .attr('onclick', String.format('showModal("{0}")', 'Delete?serno=' + col.EMP_SERNO))
                                        .addClass("btn btn-simple btn-danger btn-icon remove")
                                        .wrap('<div></div>')
                                        .parent()
                                        .html();

                            } else {
                                return data;
                            }
                        }
                    }
                ],

                "pagingType": "full_numbers",
                "lengthMenu": [
                    [10, 25, 50, -1],
                    [10, 25, 50, "All"]
                ],
                responsive: true,
                language: {
                    search: "_INPUT_",
                    searchPlaceholder: "Search records",
                }

            });

            $('.card .material-datatables label').addClass('form-group');
        });

        function showModal(action) {
            var ajaxCallURL = '/Employee/' + action;
            var options = {
                "backdrop": "static",
                keyboard: true
            }
            $.ajax({
                type: "GET",
                url: ajaxCallURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('.modal-body').modal().html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
            $("#closbtn").click(function () {
                $('#myModal').modal('hide');
            });
        }

        //可在Javascript中使用如同C#中的string.format
        //使用方式 : var fullName = String.format('Hello. My name is {0} {1}.', 'FirstName', 'LastName');
        String.format = function () {
            var s = arguments[0];
            if (s == null) return "";
            for (var i = 0; i < arguments.length - 1; i++) {
                var reg = getStringFormatPlaceHolderRegEx(i);
                s = s.replace(reg, (arguments[i + 1] == null ? "" : arguments[i + 1]));
            }
            return cleanStringFormatResult(s);
        }
        //可在Javascript中使用如同C#中的string.format (對jQuery String的擴充方法)
        //使用方式 : var fullName = 'Hello. My name is {0} {1}.'.format('FirstName', 'LastName');
        String.prototype.format = function () {
            var txt = this.toString();
            for (var i = 0; i < arguments.length; i++) {
                var exp = getStringFormatPlaceHolderRegEx(i);
                txt = txt.replace(exp, (arguments[i] == null ? "" : arguments[i]));
            }
            return cleanStringFormatResult(txt);
        }
        //讓輸入的字串可以包含{}
        function getStringFormatPlaceHolderRegEx(placeHolderIndex) {
            return new RegExp('({)?\\{' + placeHolderIndex + '\\}(?!})', 'gm')
        }
        //當format格式有多餘的position時，就不會將多餘的position輸出
        //ex:
        // var fullName = 'Hello. My name is {0} {1} {2}.'.format('firstName', 'lastName');
        // 輸出的 fullName 為 'firstName lastName', 而不會是 'firstName lastName {2}'
        function cleanStringFormatResult(txt) {
            if (txt == null) return "";
            return txt.replace(getStringFormatPlaceHolderRegEx("\\d+"), "");
        }
    </script>
}